[versions]
agp = "8.1.2"
androidxlifecycle = "2.6.2"
androidxactivity = "1.8.0"
appcompat = "1.6.1"
circuit = "0.15.0"
compose = "1.5.10-beta02"
coroutines = "1.7.3"
kotlin = "1.9.20-Beta2"
kotlininject = "0.6.3"
ksp = "1.9.20-Beta2-1.0.13"
okhttp = "4.11.0"
kermit = "1.2.3" # Pinned back as Store uses Kermit 1.x
ktor = "2.3.5"
paging-multiplatform = "3.2.0-alpha05-0.2.3"
sqldelight = "2.1.0-SNAPSHOT"
lyricist = "1.4.2"
datastore = "1.1.0-dev01"

[plugins]
cacheFixPlugin = { id = "org.gradle.android.cache-fix", version = "2.8.1" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-lint = { id = "com.android.lint", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
buildConfig = "com.github.gmazzo.buildconfig:4.1.2" # let's see if we need this
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
dependency-graph = { id = "com.vanniktech.dependency.graph.generator", version = "0.8.0" }

[libraries]
androidx-activity-activity = { module = "androidx.activity:activity", version.ref = "androidxactivity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxactivity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-archCoreTesting = "androidx.arch.core:core-testing:2.2.0"
androidx-collection = "androidx.collection:collection:1.3.0"
androidx-core = "androidx.core:core-ktx:1.12.0"
androidx-splashscreen = "androidx.core:core-splashscreen:1.0.1"
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
androidx-datastore-android = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-compose-test = { module = "androidx.compose.ui:ui-test-junit4", version.require = "1.5.3" }
androidx-compose-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.require = "1.5.3" }

androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxlifecycle" }

paging-common = { module = "app.cash.paging:paging-common", version.ref = "paging-multiplatform" }
paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "paging-multiplatform" }

androidx-palette = "androidx.palette:palette:1.0.0"

androidx-test-core = "androidx.test:core-ktx:1.5.0"
androidx-test-junit = "androidx.test.ext:junit-ktx:1.1.5"
androidx-test-rules = "androidx.test:rules:1.5.0"
androidx-test-runner = "androidx.test:runner:1.5.2"
androidx-uiautomator = "androidx.test.uiautomator:uiautomator:2.2.0"

androidx-work-runtime = "androidx.work:work-runtime-ktx:2.8.1"

circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit-gestureNavigation = { module = "com.slack.circuit:circuitx-gesture-navigation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit-runtime = { module = "com.slack.circuit:circuit-runtime", version.ref = "circuit" }
circuit-testing = { module = "com.slack.circuit:circuit-test", version.ref = "circuit" }

compose-material3-windowsizeclass = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.3.1"

tools-desugarjdklibs = "com.android.tools:desugar_jdk_libs:2.0.3"

google-firebase-analytics = "com.google.firebase:firebase-analytics-ktx:21.3.0"
google-firebase-crashlytics = "com.google.firebase:firebase-crashlytics-ktx:18.4.3"
google-firebase-perf = "com.google.firebase:firebase-perf-ktx:20.4.1"

imageloader = "io.github.qdsfdhvh:image-loader:1.6.7"

junit = "junit:junit:4.13.2"

kermit-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }

kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.22.0"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.1"
kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }

lyricist-core = { module = "cafe.adriel.lyricist:lyricist-core", version.ref = "lyricist" }
lyricist-library = { module = "cafe.adriel.lyricist:lyricist", version.ref = "lyricist" }

okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

store = "org.mobilenativefoundation.store:store5:5.0.0"

sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

timber = "com.jakewharton.timber:timber:5.0.1"

turbine = "app.cash.turbine:turbine:1.0.0"

uuid = "com.benasher44:uuid:0.8.1"

# Build logic dependencies
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }